// Get all the tags applied to Facts
[...*[_type == 'fact'][0]{'tags': tags[]{'tag':{tag->{name}}.tag.name}.tag}.tags[0]]

// Get all tags for a single fact
*[_id == '0011e736-4cbf-4e53-aa0a-1b749d1a9696'][0]{'tags': tags[]{'tag': tag->{name}}.tag.name}.tags

// Get all the Facts tagged with 'Religious'
*[
  _type == 'fact' &&
  'Religious' in *[_id == ^._id][0]{'tags': tags[]{'tag': tag->{name}}.tag.name}.tags
]{'link': 'https://cms.hollowverse.com/desk/fact;' + _id}.link

// Ordered by _updatedAt
*[_type == 'fact'] | order(_updatedAt desc)[0..49] {
  projection
}

// Celebs ordered by having most recently added Facts
*[
  _type == 'celeb' &&
  slug.current in $slugs
] {
  name,
  'slug': slug.current,
  "latestFact": *[
    _type == "fact" &&
    celeb._ref == ^._id
  ] | order(_updatedAt desc)[0]
} | order(latestFact._updatedAt desc){
  name,
  slug,
  latestFact
}

// Get a count of different doc types
distinct(*[]{_type}{
  'count': _type + ': ' + string(count(*[_type == ^._type]))
}.count)

// Facts which have a tag ID
*[
  _type == 'fact' &&
  celeb->slug.current != 'elon-musk' &&
  '0be2d35e-7bdb-4b5c-8641-7492da57ba0f' in tags[].tag->_id
] | order(date desc) {'name': celeb->name}

// Celebs that have a certain tag
*[ _type == "celeb" ]{
  name,
  'matchingFacts': *[
    _type == 'fact' &&
    celeb._ref == ^._id &&
    '0be2d35e-7bdb-4b5c-8641-7492da57ba0f' in tags[].tag->_id
  ][0]
}[defined(matchingFacts)].name

// Celebs having a certain tag (bug in GROQ prevents this from actually working)
*[
  _type == 'celeb' &&
  count(*[
    _type == 'fact' &&
    '9171bdb4-1a9b-4cb0-a967-211790a44073' in tags[].tag->_id &&
    celeb._ref == ^._id
  ]) > 0
]

// ID in drafts and none drafts
*[_id match '5fd9bfb3-dd98-4198-bb71-fa52e7244e23']

// Count number of facts per celeb
*[
  _type == 'celeb'
]{
  name,
  'count': count(*[
    _type == 'fact' &&
    celeb._ref == ^._id
  ])
}
